services:
  auth:
    image: blog:latest
    build:
      context: .
    ports:
      - "8001:8000"
    volumes:
      - crates_data:/usr/local/cargo/registry
      - ./.local/config.toml:/app/config.toml
    command: ["auth"]
    depends_on:
     - postgres
     - loki
     - keydb
  
  admin:
    image: blog:latest
    build:
      context: .
    ports:
      - "8002:8000"
    volumes:
      - crates_data:/usr/local/cargo/registry
      - ./.local/config.toml:/app/config.toml
    command: ["admin"]
    depends_on:
     - postgres
     - loki
     - keydb
  
  app:
    image: blogapp:latest
    build:
      context: ./apps/admin
    ports:
      - "8000:80"

  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: blog
    ports:
      - "5432:5432"
    volumes:
      - ./migrations:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data

  loki:
    image: grafana/loki:3.4
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    volumes:
      - loki_data:/loki

  # prometheus:
  #   image: prom/prometheus:v3.2.1
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - prometheus_data:/prometheus
  #     - ./.local/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:10.0.0
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - ./.local/grafana/provisioning:/etc/grafana/provisioning

  nginx:
    image: nginx:1.27.4
    ports:
      - "8080:80"
    volumes:
      - .local/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - auth
      - admin

  keydb:
    image: eqalpha/keydb:latest
    ports:
      - "6379:6379"
    volumes:
      - keydb_data:/data

volumes:
  crates_data:
  postgres_data:
  loki_data:
  prometheus_data:
  keydb_data: