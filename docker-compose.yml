services:
  custom_service:
    build:
      context: .
      dockerfile: .local/Dockerfile
    environment:
      PORT: 8080
    ports:
      - "8080:8080"
    volumes:
      - ./src:/app/src
    command: ["cargo", "run", "--release"]

  postgres:
    image: postgres:17
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: blog
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  kafka:
    image: confluentinc/cp-kafka:7.9.0
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  loki:
    image: grafana/loki:3.4
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki

  # prometheus:
  #   image: prom/prometheus:v3.2.1
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - prometheus_data:/prometheus
  #     - ./.local/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:10.0.0
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - ./.local/grafana/provisioning:/etc/grafana/provisioning

  # nginx:
  #   image: nginx:1.27.4
  #   ports:
  #     - "8080:80"
  #   volumes:
  #     - ./.local/nginx.conf:/etc/nginx/nginx.conf

  keydb:
    image: eqalpha/keydb:latest
    ports:
      - "6379:6379"
    volumes:
      - keydb_data:/data

  redisinsight:
    image: redislabs/redisinsight:latest
    ports:
      - "8001:8001"

  minio:
    image: minio/minio:RELEASE.2025-03-12T18-04-18Z
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin
    ports:
      - "9000:9000"
    volumes:
      - minio_data:/data
    command: server /data

volumes:
  postgres_data:
  loki_data:
  prometheus_data:
  minio_data:
  keydb_data: